type RemoteModelWithOmitempty {
    newDesc: String
}

type DefinedTypeFromBasics {
    newString: String!
    newInt: Int!
    newInt8: Int!
    newInt16: Int!
    newInt32: Int!
    newInt64: Int!
    newBool: Boolean!
    newFloat64: Float!
    newUint: Int!
    newUint8: Int!
    newUint16: Int!
    newUint32: Int!
    newID: ID!

    ### BELOW ARE NOT SUPPORTED AS BASIC - MUST CREATE SCALAR WITH MARSHALFUNC AND UNMARSHARLFUNC ###
    # float32 needs a scalar because precision changes by converting to float64 and back to float32 while marshalling/unmarshalling
    # for example, value of 5.76 comes out as 5.760000228881836, anyone knows how to fix this?
    newFloat32: Float32!

    # uint64 need a scalar because it is bigger than int64
    newUint64: Uint64!
}

scalar Float32
scalar Uint64
