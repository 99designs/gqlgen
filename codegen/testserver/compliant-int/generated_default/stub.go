// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package generated

import (
	"context"
)

type Stub struct {
	QueryResolver struct {
		OverflowInt32ButReturnInt64 func(ctx context.Context, sign Sign) (*int, error)
		OverflowInt32               func(ctx context.Context, sign Sign) (*int, error)
		EchoInt32In                 func(ctx context.Context, n *int) (int, error)
		EchoInt64In                 func(ctx context.Context, n *int) (int, error)
		EchoInt32                   func(ctx context.Context, input Input) (*Result, error)
		EchoInt64                   func(ctx context.Context, input Input64) (*Result64, error)
	}
}

func (r *Stub) Query() QueryResolver {
	return &stubQuery{r}
}

type stubQuery struct{ *Stub }

func (r *stubQuery) OverflowInt32ButReturnInt64(ctx context.Context, sign Sign) (*int, error) {
	return r.QueryResolver.OverflowInt32ButReturnInt64(ctx, sign)
}
func (r *stubQuery) OverflowInt32(ctx context.Context, sign Sign) (*int, error) {
	return r.QueryResolver.OverflowInt32(ctx, sign)
}
func (r *stubQuery) EchoInt32In(ctx context.Context, n *int) (int, error) {
	return r.QueryResolver.EchoInt32In(ctx, n)
}
func (r *stubQuery) EchoInt64In(ctx context.Context, n *int) (int, error) {
	return r.QueryResolver.EchoInt64In(ctx, n)
}
func (r *stubQuery) EchoInt32(ctx context.Context, input Input) (*Result, error) {
	return r.QueryResolver.EchoInt32(ctx, input)
}
func (r *stubQuery) EchoInt64(ctx context.Context, input Input64) (*Result64, error) {
	return r.QueryResolver.EchoInt64(ctx, input)
}
