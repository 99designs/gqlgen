package customresolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen

import (
	"context"

	customresolver "github.com/99designs/gqlgen/plugin/resolvergen/testdata/singlefile/out"
)

// Resolver is the resolver for the resolver field.
func (r *queryCustomResolverType) Resolver(ctx context.Context) (_ *customresolver.Resolver, err error) {
	// Named return values are supported.
	return
}

// Name is the resolver for the name field.
// This comment is multiline method doc
func (r *resolverCustomResolverType) Name(ctx context.Context, obj *customresolver.Resolver) (string, error) {
	// CustomerResolverType.Name implementation
	return "", nil
}

// Query returns customresolver.QueryResolver implementation.
func (r *CustomResolverType) Query() customresolver.QueryResolver { return &queryCustomResolverType{r} }

// Resolver returns customresolver.ResolverResolver implementation.
// This comment is multiline method doc
func (r *CustomResolverType) Resolver() customresolver.ResolverResolver {
	return &resolverCustomResolverType{r}
}

type queryCustomResolverType struct{ *CustomResolverType }
type resolverCustomResolverType struct{ *CustomResolverType }

func AUserHelperFunction() {
	// AUserHelperFunction implementation
}
