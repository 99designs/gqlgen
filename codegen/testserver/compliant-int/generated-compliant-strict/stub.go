// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package generated

import (
	"context"
)

type Stub struct {
	QueryResolver struct {
		EchoIntToInt                func(ctx context.Context, n *int32) (int32, error)
		EchoInt64ToInt64            func(ctx context.Context, n *int) (int, error)
		EchoIntInputToIntObject     func(ctx context.Context, input Input) (*Result, error)
		EchoInt64InputToInt64Object func(ctx context.Context, input Input64) (*Result64, error)
	}
}

func (r *Stub) Query() QueryResolver {
	return &stubQuery{r}
}

type stubQuery struct{ *Stub }

func (r *stubQuery) EchoIntToInt(ctx context.Context, n *int32) (int32, error) {
	return r.QueryResolver.EchoIntToInt(ctx, n)
}
func (r *stubQuery) EchoInt64ToInt64(ctx context.Context, n *int) (int, error) {
	return r.QueryResolver.EchoInt64ToInt64(ctx, n)
}
func (r *stubQuery) EchoIntInputToIntObject(ctx context.Context, input Input) (*Result, error) {
	return r.QueryResolver.EchoIntInputToIntObject(ctx, input)
}
func (r *stubQuery) EchoInt64InputToInt64Object(ctx context.Context, input Input64) (*Result64, error) {
	return r.QueryResolver.EchoInt64InputToInt64Object(ctx, input)
}
